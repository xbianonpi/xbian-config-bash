#!/bin/bash
#
#Copyright 2012 CurlyMo <development@xbian.org>
#
#This file is part of XBian - XBMC on the Raspberry Pi.
#
#XBian is free software: you can redistribute it and/or modify it under the
#terms of the GNU General Public License as published by the Free Software
#Foundation, either version 3 of the License, or (at your option) any later
#version.
#
#XBian is distributed in the hope that it will be useful, but WITHOUT ANY
#WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
#FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
#details.
#
#You should have received a copy of the GNU General Public License along
#with XBian. If not, see <http://www.gnu.org/licenses/>

function retrieveUpdateListFn() {
	apt-get dist-upgrade -s &>/tmp/aptupdates 2>/dev/null;
}

function getAllPackagesLisFn() {
	if [ -f "/tmp/aptupdates" ]; then
		IFS=$'\n';
		PACKAGES=($(cat /tmp/aptupdates | sed -ne 's/\(Inst.*\)\([\ ]\{1\}\)\(xbian-[A-Za-z0-9\.\-]\{1,\}\)\([\ ]\)\(\[\)\(.*\)\(\]\)\(.*[(]\)\([0-9A-Za-z\~\.\:\+\-]\{1,\}\)\([\ ].*\)/\3;\6;\9/p' | grep -v xbian-update | sort | uniq));
		IFS=$ORIGINALIFS;
		return 1;
	else
		return 0;
	fi
}

function getAllUpdatesLisFn() {
	if [ -f "/tmp/aptupdates" ]; then
		IFS=$'\n';
		UPDATES=($(cat /tmp/aptupdates | sed -ne 's/\(Inst.*\)\([\ ]\{1\}\)\(xbian-update\)\([\ ]\)\(\[\)\(.*\)\(\]\)\(.*[(]\)\([0-9A-Za-z\~\.\:\+\-]\{1,\}\)\([\ ].*\)/\3;\6;\9/p' | sort | uniq));
		IFS=$ORIGINALIFS;
		return 1;
	else
		return 0;
	fi
}

function updatePackagesFn() {
	LIST="";
	ARRAY=($2);
	for INDEX in ${ARRAY[@]}; do
		INDEX=${INDEX//\"/ };
		NAME=$(echo ${PACKAGES[$((INDEX-1))]} | cut -f1 -d";");
		VERSION=$(echo ${PACKAGES[$((INDEX-1))]} | cut -f3 -d";");
		LIST+=$NAME"="$VERSION" ";
	done;

	if [ $1 -eq 1 ]; then
		apt-get install -s $LIST &>/tmp/aptstatus
	elif [ $1 -eq 0 ]; then
		apt-get install -y $LIST
	elif [ $1 -eq 2 ]; then
		nohup apt-get install -y $LIST &>/tmp/aptstatus &
	fi
	getAptErrorCodeFn;
	return $?;
}

function findNextUpdateVersionFn() {
	CMAJVERSION=$1;
	CMINVERSION=$2;
	ISALPHA=$(echo $CMINVERSION | grep "\." | wc -l);
	ISBETA=0;
	ISSTABLE=0;
	NEXTVERSION="";
	NEXTBETA=0;
	NEXTALPHA=0;
	NEXTMINSTABLE=0;
	NEXTMAJSTABLE=0;
	if [ $ISALPHA -eq 0 ]; then
		if [ ! -z "$CMINVERSION" ]; then
			ISBETA=1;
		fi
	fi
	if [ $ISALPHA -eq 0 ] && [ $ISBETA -eq 0 ]; then
		ISSTABLE=1;
	fi

	if [ $ISSTABLE -eq 1 ]; then
		NEXTALPHA=0.1;
		CMAJVERSION=$(echo "$CMAJVERSION+0.1" | bc);
	elif [ $ISBETA -eq 1 ]; then
		NEXTALPHA=$(echo "$CMINVERSION+0.1" | bc);
	elif [ $ISALPHA -eq 1 ]; then
		CURBETA=$(echo $CMINVERSION | cut -f1 -d".");
		NEXTALPHA=$(echo $CMINVERSION | cut -f2 -d".");
		NEXTALPHA=$(echo "$NEXTALPHA+1" | bc);
		NEXTALPHA=$CURBETA"."$NEXTALPHA;
	fi

	if [ $(cat "$BASEPATH/config/pkglist" | grep "xbian-update_"$CMAJVERSION"-"$NEXTALPHA"_" | wc -l) -eq 1 ]; then
		NEXTVERSION=$CMAJVERSION-$NEXTALPHA;
	fi
	
	if [ -z "$NEXTVERSION" ]; then
		if [ $ISSTABLE -eq 1 ]; then
			NEXTBETA=1;
		elif [ $ISBETA -eq 1 ]; then
			NEXTBETA=$(echo "$CMINVERSION+1" | bc);
		elif [ $ISALPHA -eq 1 ]; then
			NEXTBETA=$(echo $CMINVERSION | cut -f1 -d".");
			NEXTBETA=$(echo "$NEXTBETA+1" | bc);
		fi
	fi
	if [ $(cat "$BASEPATH/config/pkglist" | grep "xbian-update_"$CMAJVERSION"-"$NEXTBETA"_" | wc -l) -eq 1 ]; then
		NEXTVERSION=$CMAJVERSION-$NEXTBETA;
	fi
	if [ -z "$NEXTVERSION" ]; then
		if [ $ISSTABLE -eq 0 ]; then
			NEXTMINSTABLE=$(echo "$CMAJVERSION+0.1" | bc);
		else
			NEXTMINSTABLE=$CMAJVERSION;
		fi
	fi
	if [ $(cat "$BASEPATH/config/pkglist" | grep "xbian-update_"$NEXTMINSTABLE"_" | wc -l) -eq 1 ]; then
		NEXTVERSION=$NEXTMINSTABLE;
	fi	
	if [ -z "$NEXTVERSION" ]; then
		CMAJVERSION=$(echo "$CMAJVERSION" | cut -f1 -d"." | bc);
		NEXTMAJSTABLE=$(echo "$CMAJVERSION+1" | bc);
	fi
	if [ $(cat "$BASEPATH/config/pkglist" | grep "xbian-update_"$NEXTMINSTABLE"_" | wc -l) -eq 1 ]; then
		NEXTVERSION=$NEXTMAJSTABLE;
	fi
}


function updateSystemFn() {
	LIST="";
	ARRAY=($2);
	NEXTVERSION="";
	if [ ${#ARRAY[@]} -gt 0 ]; then
		INDEX=${ARRAY[0]};
		INDEX=${INDEX//\"/ };
		NVERSION=$(echo ${UPDATES[$((INDEX-1))]} | cut -f3 -d";");
		CVERSION=$(echo ${UPDATES[$((INDEX-1))]} | cut -f2 -d";");
		CMAJVERSION=$(echo $CVERSION | cut -f1 -d"-");
		CMINVERSION=$(echo $CVERSION | cut -f2 -d"-");

		findNextUpdateVersionFn "$CMAJVERSION" "$CMINVERSION";
	fi

	if [ -z "$NEXTVERSION" ]; then
		return 2;
	else 
		if [ $1 -eq 1 ]; then
			apt-get install -s ${VERSIONS[0]}"="$NEXTVERSION &>/tmp/aptstatus
		elif [ $1 -eq 0 ]; then
			apt-get install -y ${VERSIONS[0]}"="$NEXTVERSION &>/tmp/aptstatus
		elif [ $1 -eq 2 ]; then
			nohup apt-get install -y ${VERSIONS[0]}"="$NEXTVERSION &>/tmp/aptstatus &
		fi
		getAptErrorCodeFn;
		return $?
	fi
}
