#!/bin/bash
#
#Copyright 2012 Hexagon <development@xbian.org>
#
#This file is part of XBian - XBMC on the Raspberry Pi.
#
#XBian is free software: you can redistribute it and/or modify it under the
#terms of the GNU General Public License as published by the Free Software
#Foundation, either version 3 of the License, or (at your option) any later
#version.
#
#XBian is distributed in the hope that it will be useful, but WITHOUT ANY
#WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
#FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
#details.
#
#You should have received a copy of the GNU General Public License along
#with XBian. If not, see <http://www.gnu.org/licenses/>

#|------------------------------------|
#|          Global variables          |
#|------------------------------------|

# The arguments this module accepts
ARGUMENTS=(check update);

#|------------------------------------|
#|          Include files             |
#|------------------------------------|

source $BASEPATH/modules/updates/functions
source $BASEPATH/modules/updates/dialogs

#|------------------------------------|
#|           Main program             |
#|------------------------------------|

# Executes the GUI version of this module
function showGUIFn() {

	wrapTxtFn "Downloading package list ..."
	centerTxtFn "$WRAPPEDTXT"
	showInfoDlg "$CENTEREDTXT"

	downloadPackageListFn
	if [ $? -eq 0 ]; then

		wrapTxtFn "Package list could not be downloaded, try again later ..."
		centerTxtFn "$WRAPPEDTXT"
		showMsgDlg "Close" "$CENTEREDTXT"

	else

		wrapTxtFn "Checking for updates ..."
		centerTxtFn "$WRAPPEDTXT"
		showInfoDlg "$CENTEREDTXT"

		TO_INSTALL=$(checkForUpdatesFn)
		if [ ! -z "$TO_INSTALL" ]; then
			if [ "$TO_INSTALL" = "0" ]; then
				# No new updates
				wrapTxtFn "Your system is up to date!"
				centerTxtFn "$WRAPPEDTXT"
				showMsgDlg "Ok" "$CENTEREDTXT"

			elif [ "$TO_INSTALL" = "-1" ]; then
				# An error occurred
				wrapTxtFn "An error occurred while checking for updates"
				centerTxtFn "$WRAPPEDTXT"
				showMsgDlg "Ok" "$CENTEREDTXT"

			else
				# Update is available
				wrapTxtFn "An update ($TO_INSTALL) is available, do you want to install this?"
				centerTxtFn "$WRAPPEDTXT"
				showConfirmDlg "$CENTEREDTXT"

				if [ $? -eq 0 ]; then
					wrapTxtFn "Installing update, please wait"
					centerTxtFn "$WRAPPEDTXT"
					showInfoDlg "$CENTEREDTXT"
					installUpdateFn "$TO_INSTALL"

					if [ $? -eq 1 ]; then
						# System updated
						wrapTxtFn "System updated to version $TO_INSTALL"
						centerTxtFn "$WRAPPEDTXT"
						showMsgDlg "Ok" "$CENTEREDTXT"
					else
						# An error occurred
						wrapTxtFn "An error occurred while instaling the update"
						centerTxtFn "$WRAPPEDTXT"
						showMsgDlg "Ok" "$CENTEREDTXT"
					fi
				fi
			fi
		fi
	fi

}

# Executes the command line version of this module
#  $1 Argument [Integer]
# Returns
#  *Check [String]
#  - Latest version
#  *Update [Integer]
#  - 1: Success
#  - 0: Failed
function showCMDFn() {
	case $1 in
		"check")
			downloadPackageListFn
			if [ $? -eq 0 ]; then
				echo 0;
			else
				TO_INSTALL=$(checkForUpdatesFn)
				if [ ! -z "$TO_INSTALL" ]; then
					if [ "$TO_INSTALL" = "0" ]; then
						echo "0"
					elif [ "$TO_INSTALL" = "-1" ]; then
						echo "-1"
					else
						echo "$TO_INSTALL"
					fi
				fi
			fi
		;;
		"update")
			installUpdateFn "$2"
			if [ $? -eq 1 ]; then
				echo 1;
			else
				echo 0;
			fi
		;;
	esac
}
