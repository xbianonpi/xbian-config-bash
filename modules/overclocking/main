#!/bin/bash
#
#Copyright 2012 CurlyMo <development@xbian.org>
#
#This file is part of XBian - XBMC on the Raspberry Pi.
#
#XBian is free software: you can redistribute it and/or modify it under the
#terms of the GNU General Public License as published by the Free Software
#Foundation, either version 3 of the License, or (at your option) any later
#version.
#
#XBian is distributed in the hope that it will be useful, but WITHOUT ANY
#WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
#FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
#details.
#
#You should have received a copy of the GNU General Public License along
#with XBian. If not, see <http://www.gnu.org/licenses/>

#|------------------------------------|
#|          Global variables          |
#|------------------------------------|

# The arguments this module accepts
ARGUMENTS=(select update);

declare -A OCSETTINGS
# Names of the overclock settings
OCNAMES=(None Modest XBian Medium High Turbo);

# Values of the overclock settings
OCSETTINGS[0]="700 250 400 0";
OCSETTINGS[1]="800 300 400 0";
OCSETTINGS[2]="840 375 400 0";
OCSETTINGS[3]="900 333 450 0";
OCSETTINGS[4]="950 450 450 2";
OCSETTINGS[5]="1000 500 500 6";

# Define the (possible) dangerous overclock settings
OCDANGEROUS=(Turbo)

# Define the safe overclock settings
OCSAFE=(None Modest XBian)

#|------------------------------------|
#|          Include files             |
#|------------------------------------|

source $BASEPATH/modules/overclocking/functions
source $BASEPATH/modules/overclocking/dialogs
source $BASEPATH/functions/config

#|------------------------------------|
#|           Main program             |
#|------------------------------------|

# Executes the GUI version of this module
function showGUIFn() {
	showOCWarningDlg;
	showLoadingDlg;
	getCurrentOCSettingsFn;	
	createOCDLGMenu $CURRENTOC;
	showOCSettingsDlg $OCMENU;
	if [ $? -eq 0 ]; then
		if [ $RETURN -eq $(($CURRENTOC+1)) ]; then
			showNoOCChangeDlg;
		elif [ $RETURN -eq $((${#OCSETTINGS[@]}+1)) ]; then
			if [ $CURRENTOC -eq -1 ]; then
				SETTINGS="${OCOLDSETTINGS[@]}";
			else
				SETTINGS=(${OCSETTINGS[$CURRENTOC]});
			fi
			showCustomOCDlg "${SETTINGS[@]}";
			if [ $? -eq 0 ]; then
				SETTINGS=($(echo $VALUES | sed 's/Mhz //g'));
				if [ ${#SETTINGS[@]} -eq 4 ]; then
					updateCustomOCSettingsFn "${SETTINGS[*]}";
					if [ $? -eq 1 ]; then
						showUpdatedOCDlg;
						ASKFORREBOOT=1;
					else
						showErrorDlg;
					fi
				else
					showOCEmptyFieldsDlg;
					showGUIFn;
				fi
			else
				showGUIFn;
			fi
		else
			updateOCSettingsFn $RETURN;
			if [ $? -eq 1 ]; then
				showUpdatedOCDlg;
				ASKFORREBOOT=1;
			else
				showErrorDlg;
			fi
		fi
	fi
}

# Executes the command line version of this module
function showCMDFn() {
	#TODO
	echo;
}