#!/bin/bash
#
#Copyright 2012 CurlyMo <development@xbian.org>
#
#This file is part of XBian - XBMC on the Raspberry Pi.
#
#XBian is free software: you can redistribute it and/or modify it under the
#terms of the GNU General Public License as published by the Free Software
#Foundation, either version 3 of the License, or (at your option) any later
#version.
#
#XBian is distributed in the hope that it will be useful, but WITHOUT ANY
#WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
#FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
#details.
#
#You should have received a copy of the GNU General Public License along
#with XBian. If not, see <http://www.gnu.org/licenses/>

function getCurrentOCSettingsFn() {
	selectConfigVarFn "arm_freq"
	OCOLDSETTINGS[0]=$RETURN;
	selectConfigVarFn "core_freq"
	OCOLDSETTINGS[1]=$RETURN;
	selectConfigVarFn "sdram_freq"
	OCOLDSETTINGS[2]=$RETURN;
	selectConfigVarFn "over_voltage"
	OCOLDSETTINGS[3]=$RETURN;
	return $OCOLDSETTINGS;
}

function updateOCSettingsFn() {
	case "$RETURN" in
		1)
			OCNEWSETTINGS=(700 250 400 0);
		;;
		2)
			OCNEWSETTINGS=(800 300 400 0);
		;;
		3)
			OCNEWSETTINGS=(840 375 400 0);
		;;
		4)
			OCNEWSETTINGS=(900 333 450 0);
		;;
		5)
			OCNEWSETTINGS=(950 450 450 2);
		;;
		6)
			OCNEWSETTINGS=(1000 500 500 6);
		;;
	esac;
	updateConfigVarFn "arm_freq" ${OCNEWSETTINGS[0]};
	updateConfigVarFn "core_freq" ${OCNEWSETTINGS[1]};
	updateConfigVarFn "sdram_freq" ${OCNEWSETTINGS[2]};
	updateConfigVarFn "over_voltage" ${OCNEWSETTINGS[3]};
	
	getCurrentOCSettingsFn
	if [ ${OCOLDSETTINGS[0]} -eq ${OCNEWSETTINGS[0]} ] && [ ${OCOLDSETTINGS[1]} -eq ${OCNEWSETTINGS[1]} ] && [ ${OCOLDSETTINGS[2]} -eq ${OCNEWSETTINGS[2]} ] && [ ${OCOLDSETTINGS[3]} -eq ${OCNEWSETTINGS[3]} ]; then
		return 1;
	else
		return 0;
	fi
}