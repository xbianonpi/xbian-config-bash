# #!/bin/bash
# #
# #Copyright 2012 CurlyMo <development@xbian.org>
# #
# #This file is part of XBian - XBMC on the Raspberry Pi.
# #
# #XBian is free software: you can redistribute it and/or modify it under the
# #terms of the GNU General Public License as published by the Free Software
# #Foundation, either version 3 of the License, or (at your option) any later
# #version.
# #
# #XBian is distributed in the hope that it will be useful, but WITHOUT ANY
# #WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# #FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
# #details.
# #
# #You should have received a copy of the GNU General Public License along
# #with XBian. If not, see <http://www.gnu.org/licenses/>

# # Check if a package is installed on the system
# #  $1 package name
function isPKGInstalledFn() {
	RES=$(dpkg-query -W -f='${Status}\n' "$1" 2>/dev/null)
	DEINST=$(echo $RES | grep 'deinstall ok' | wc -l)
	if [ -z "$RES" ]; then
		return 0;
	fi
	if [ $DEINST -eq 1 ]; then
		return 0;
	fi
	return 1;
}

# # Set Raspberry PI config variable
# # ToDo: Save backup of $3 with history
# #  $1 key
# #  $2 value
# #  $3 file
# set_config_var() {
	# sed -i "/$1/d" $3
	# echo "$1=$2" >> $3
	# sed -i '/^$/d' $3
# }

# # Remove Raspberry PI config variable
# # $1 key
# # $2 file
# remove_config_var() {
	# sed -i "/$1/d" /boot/config.txt
# }

# # Check if root is valid for SSH-login
# # return boolean
# check_rootssh_status() {
	# if [ -f "/etc/ssh/sshd_config" ]; then
		# STATUS=$(cat /etc/ssh/sshd_config | grep PermitRootLogin | grep "yes" | wc -l)
		# if [ $STATUS -eq 1 ]; then
			# DISABLE_ROOTSSH=1;
		# else
			# DISABLE_ROOTSSH=0;
		# fi
	# fi
# } 


# # Sets the RPi overclock
# #  $1 Preset name
# #  $2 arm_freq
# #  $3 core_freq
# #  $4 sdram_freq
# #  $5 over_voltage
# set_overclock() {
	# if [ $DEBUG -eq 0 ]; then
		# ASKFORREBOOT=1
		# set_config_var arm_freq $2 /boot/config.txt >/dev/null
		# set_config_var core_freq $3 /boot/config.txt >/dev/null
		# set_config_var sdram_freq $4 /boot/config.txt >/dev/null 
		# set_config_var over_voltage $5 /boot/config.txt >/dev/null
	# fi
	# showdialog 	"Config > Settings > Overclocking" \
			# "Ok" \
			# "\n         Overlock set to preset '$1'"
# }

# # Check which version of a package that is installed
# #  $1 package name
# function pkg_version() {
	# pkg_installed $1
	# if [ $? -eq 1 ]; then
		# dpkg-query -W -f='${Version}\n' "$1" 2>/dev/null
	# fi
# }

# function updateapt() {
	# if [ $PACKAGEDBUPDATED -eq 0 ]; then
		# showinfo " $1 > $(basename $2) " "\n\n         Updating package database..."
		# apt-get update > /dev/null 2>&1
		# PACKAGEDBUPDATED=1
	# fi
# }

# # Download updated package-lists if needed
# #   $1 Window title for status screen
# function download_pkg_list() {
        # if [ ! -f /tmp/xbiancache/Packages ]; then
                # if [ ! -d /tmp/xbiancache ]; then
                        # mkdir /tmp/xbiancache;
                # fi
		# showinfo "$1" "\n\n            Updating package list..."
                # wget -P /tmp/xbiancache/ ${APTBASE}Packages.gz 2>/dev/null >/dev/null;
                # gunzip -c /tmp/xbiancache/Packages.gz > /tmp/xbiancache/Packages;
        # fi
# }

# # Check if a package of a specific version is available in apt cache
# #  $1           Package name
# #  $2           Package version
# #  @return      0 for not available, 1 for available
# function check_version_cache() {
        # RES_APT_CACHE=$(apt-cache showpkg $1 | grep "$2 (")
        # if [ -z $RES_APT_CACHE ]; then
                # # Not available, try apt-get update and check again
                # showinfo "$1" "\n\n     Updating package database, please wait ..."
                # apt-get update > /dev/null
                # RES_APT_CACHE=$(apt-cache showpkg $1 | grep "$2 (")
                # if [ -z $RES_APT_CACHE ]; then
                        # # Still not available, this package doesnt exist
                        # return 0;
                # else
                        # # Now it's available, apt-get update did the trick!
                        # return 1;
                # fi
        # else
                # # Was available without updateing apt repos, great!
                # return 1;
        # fi
        # # We should never get here
# }